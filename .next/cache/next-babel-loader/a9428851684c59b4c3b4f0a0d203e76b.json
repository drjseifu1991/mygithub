{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Head, UserInfo, Charts, Repos, Footer, Corner, Error, RateLimit } from '../components';\nimport GhPolyglot from 'gh-polyglot';\n// import { mockUserData, mockLangData, mockRepoData } from '../utils';\n\nvar User = function User(props) {\n  var username = props.query.id;\n  var _useState = useState(null),\n    userData = _useState[0],\n    setUserData = _useState[1];\n  var _useState2 = useState(null),\n    langData = _useState2[0],\n    setLangData = _useState2[1];\n  var _useState3 = useState(null),\n    repoData = _useState3[0],\n    setRepoData = _useState3[1];\n  var _useState4 = useState({\n      active: false,\n      type: 200\n    }),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(null),\n    rateLimit = _useState5[0],\n    setRateLimit = _useState5[1];\n  var getUserData = function getUserData() {\n    fetch(\"https://api.github.com/users/\".concat(username)).then(function (response) {\n      if (response.status === 404) {\n        return setError({\n          active: true,\n          type: 404\n        });\n      }\n      if (response.status === 403) {\n        return setError({\n          active: true,\n          type: 403\n        });\n      }\n      return response.json();\n    }).then(function (json) {\n      return setUserData(json);\n    })[\"catch\"](function (error) {\n      setError({\n        active: true,\n        type: 400\n      });\n      console.error('Error:', error);\n    });\n  };\n  var getLangData = function getLangData() {\n    var me = new GhPolyglot(\"\".concat(username));\n    me.userStats(function (err, stats) {\n      if (err) {\n        console.error('Error:', err);\n        setError({\n          active: true,\n          type: 400\n        });\n      }\n      setLangData(stats);\n    });\n  };\n  var getRepoData = function getRepoData() {\n    fetch(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=100\")).then(function (response) {\n      if (response.status === 404) {\n        return setError({\n          active: true,\n          type: 404\n        });\n      }\n      if (response.status === 403) {\n        return setError({\n          active: true,\n          type: 403\n        });\n      }\n      return response.json();\n    }).then(function (json) {\n      return setRepoData(json);\n    })[\"catch\"](function (error) {\n      setError({\n        active: true,\n        type: 200\n      });\n      console.error('Error:', error);\n    });\n  };\n  useEffect(function () {\n    fetch(\"https://api.github.com/rate_limit\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setRateLimit(json.resources.core);\n      if (json.resources.core.remaining < 1) {\n        setError({\n          active: true,\n          type: 403\n        });\n      }\n    });\n    getUserData();\n    getLangData();\n    getRepoData();\n\n    // setUserData(mockUserData);\n    // setLangData(mockLangData);\n    // setRepoData(mockRepoData);\n  }, []);\n  return __jsx(\"main\", null, rateLimit && __jsx(RateLimit, {\n    rateLimit: rateLimit\n  }), error && error.active ? __jsx(Error, {\n    error: error\n  }) : __jsx(React.Fragment, null, __jsx(Head, {\n    title: \"\".concat(username ? \"OctoProfile | \".concat(username) : 'OctoProfile')\n  }), __jsx(Corner, null), userData && __jsx(UserInfo, {\n    userData: userData\n  }), langData && repoData && __jsx(Charts, {\n    langData: langData,\n    repoData: repoData\n  }), repoData && __jsx(Repos, {\n    repoData: repoData\n  }), __jsx(Footer, null)));\n};\nexport default User;","map":null,"metadata":{},"sourceType":"module"}