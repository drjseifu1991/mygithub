{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Octicon, { Repo, Star, RepoForked, TriangleDown } from '@primer/octicons-react';\nimport FlipMove from 'react-flip-move';\nimport { langColors } from '../utils';\nimport ReposStyles from './styles/ReposStyles';\nimport DropdownStyles from './styles/DropdownStyles';\nimport { Section } from '../style';\nvar Repos = function Repos(_ref) {\n  var repoData = _ref.repoData;\n  var _useState = useState([]),\n    topRepos = _useState[0],\n    setTopRepos = _useState[1];\n  var _useState2 = useState('stars'),\n    sortType = _useState2[0],\n    setSortType = _useState2[1];\n  var _useState3 = useState(false),\n    dropdownOpen = _useState3[0],\n    setDropdownOpen = _useState3[1];\n  var getTopRepos = function getTopRepos(type) {\n    var LIMIT = 8;\n    var map = {\n      stars: 'stargazers_count',\n      forks: 'forks_count',\n      size: 'size'\n    };\n    var sortProperty = map[type];\n    var sorted = repoData.filter(function (repo) {\n      return !repo.fork;\n    }).sort(function (a, b) {\n      return b[sortProperty] - a[sortProperty];\n    }).slice(0, LIMIT);\n    setTopRepos(sorted);\n  };\n  useEffect(function () {\n    if (repoData.length) {\n      getTopRepos();\n    }\n  }, []);\n  useEffect(function () {\n    return getTopRepos(sortType);\n  }, [sortType]);\n  var toggleDropdown = function toggleDropdown() {\n    return setDropdownOpen(!dropdownOpen);\n  };\n  var changeRepoSort = function changeRepoSort(sortType) {\n    setSortType(sortType);\n    toggleDropdown();\n  };\n  var sortTypes = ['stars', 'forks', 'size'];\n  return __jsx(Section, null, __jsx(ReposStyles, null, __jsx(\"header\", null, __jsx(\"h2\", null, \"Top Repos\"), __jsx(\"div\", {\n    className: \"dropdown-wrapper\"\n  }, __jsx(\"span\", {\n    className: \"label\"\n  }, \"by\"), __jsx(DropdownStyles, {\n    active: dropdownOpen\n  }, __jsx(\"button\", {\n    className: \"dropdown__button\",\n    onClick: function onClick() {\n      return toggleDropdown();\n    }\n  }, __jsx(\"label\", null, sortType), __jsx(Octicon, {\n    icon: TriangleDown\n  })), __jsx(\"ul\", {\n    className: \"dropdown__list\"\n  }, sortTypes.map(function (type, i) {\n    return __jsx(\"li\", {\n      className: \"dropdown__list-item\",\n      key: i\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return changeRepoSort(type);\n      }\n    }, type));\n  }))))), __jsx(\"div\", {\n    className: \"repo-list\"\n  }, topRepos.length > 0 ? __jsx(FlipMove, {\n    typeName: \"ul\"\n  }, topRepos.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id\n    }, __jsx(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"repo\"\n    }, __jsx(\"div\", {\n      className: \"repo__top\"\n    }, __jsx(\"div\", {\n      className: \"repo__name\"\n    }, __jsx(Octicon, {\n      icon: Repo\n    }), __jsx(\"h3\", null, repo.name)), __jsx(\"p\", null, repo.description)), __jsx(\"div\", {\n      className: \"repo__stats\"\n    }, __jsx(\"div\", {\n      className: \"repo__stats--left\"\n    }, __jsx(\"span\", null, __jsx(\"div\", {\n      className: \"language\",\n      style: {\n        backgroundColor: langColors[repo.language]\n      }\n    }), repo.language), __jsx(\"span\", null, __jsx(Octicon, {\n      icon: Star\n    }), repo.stargazers_count.toLocaleString()), __jsx(\"span\", null, __jsx(Octicon, {\n      icon: RepoForked\n    }), repo.forks.toLocaleString())), __jsx(\"div\", {\n      className: \"repo__stats--right\"\n    }, __jsx(\"span\", null, repo.size.toLocaleString(), \" KB\")))));\n  })) : __jsx(\"p\", null, \"No available repositories!\"))));\n};\nexport default Repos;","map":null,"metadata":{},"sourceType":"module"}